class Solution {
    public int longestSubarray(int[] nums) {
        int c=0;
        int allzeroes=0;
        for(int i=0;i<nums.length;i++){
            if (nums[i]==0){
                allzeroes+=1;
            }
        }
        if (allzeroes==nums.length){
            return 0;
        }
        for(int i=0;i<nums.length;i++){
            if (nums[i]!=0){
                c+=1;
            }
        }
        if (c==nums.length){
            return nums.length-1;
        }
        int longest=0;
        int gap=0;
        int prev=0;
        int current=0;
        int i=0;
        if (nums[i]==0){
            
            while (nums[i]==0){
                i+=1;
            }
        }
       
        for(int j=i;j<nums.length;j++){
            if (nums[j]==1){
                
                current++;
                
            }
            else{
                if (current>0){
                    gap=0;
                }
                longest=Math.max(longest,current);
                if (prev!=0 & current!=0){
                    longest=Math.max(longest,prev+current);
                }
                gap+=1;
                
                if (gap==1){
                prev=current;
                current=0;
                
                }
                if (gap>=2){
                    prev=0;
                    current=0;
                    gap=0;
                }
                
                
                
            }
        }
        
        if (gap==1){
        
        longest=Math.max(longest,prev+current);
        }
        
        longest=Math.max(longest,current);
        return longest;
    }
}
